#!/usr/bin/env /dls/science/groups/i23/pyenvs/ctrl_conda/bin/python
from PyQt5 import QtCore, QtGui, QtWidgets
from oneshot import oneshot
import os
import pv
import datetime
import time
import numpy as np
from control import ca

class Ui_mainwindow(object):
    def setupUi(self, mainwindow):
        mainwindow.setObjectName("mainwindow")
        mainwindow.resize(520, 1050)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(mainwindow.sizePolicy().hasHeightForWidth())
        mainwindow.setSizePolicy(sizePolicy)
        mainwindow.setMinimumSize(QtCore.QSize(570, 1050))
        mainwindow.setMaximumSize(QtCore.QSize(1000, 1200))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        mainwindow.setPalette(palette)
        mainwindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        mainwindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(mainwindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 10, 501, 141))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.lab_visit = QtWidgets.QLabel(self.gridLayoutWidget)
        self.lab_visit.setObjectName("lab_visit")
        self.gridLayout.addWidget(self.lab_visit, 0, 0, 1, 1)
        self.input_visit = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.input_visit.setText("")
        self.input_visit.setMaxLength(11)
        self.input_visit.setFrame(True)
        self.input_visit.setObjectName("input_visit")
        self.gridLayout.addWidget(self.input_visit, 0, 1, 1, 1)
        self.lab_filename = QtWidgets.QLabel(self.gridLayoutWidget)
        self.lab_filename.setObjectName("lab_filename")
        self.gridLayout.addWidget(self.lab_filename, 1, 0, 1, 1)
        self.lab_exposure = QtWidgets.QLabel(self.gridLayoutWidget)
        self.lab_exposure.setTextFormat(QtCore.Qt.AutoText)
        self.lab_exposure.setObjectName("lab_exposure")
        self.gridLayout.addWidget(self.lab_exposure, 2, 0, 1, 1)
        self.input_filename = QtWidgets.QLineEdit(self.gridLayoutWidget)
        self.input_filename.setText("")
        self.input_filename.setClearButtonEnabled(True)
        self.input_filename.setObjectName("input_filename")
        self.gridLayout.addWidget(self.input_filename, 1, 1, 1, 1)
        self.exposure = QtWidgets.QDoubleSpinBox(self.gridLayoutWidget)
        self.exposure.setMinimum(0.01)
        self.exposure.setMaximum(15.0)
        self.exposure.setSingleStep(0.1)
        self.exposure.setProperty("value", 0.1)
        self.exposure.setObjectName("exposure")
        self.gridLayout.addWidget(self.exposure, 2, 1, 1, 1)
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(10, 160, 501, 61))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.detectordist_in = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.detectordist_in.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.detectordist_in.setChecked(True)
        self.detectordist_in.setObjectName("detectordist_in")
        self.group_detectordist = QtWidgets.QButtonGroup(mainwindow)
        self.group_detectordist.setObjectName("group_detectordist")
        self.group_detectordist.addButton(self.detectordist_in)
        self.horizontalLayout_3.addWidget(self.detectordist_in)
        self.detectordist_out = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.detectordist_out.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.detectordist_out.setObjectName("detectordist_out")
        self.group_detectordist.addButton(self.detectordist_out)
        self.horizontalLayout_3.addWidget(self.detectordist_out)
        self.detectordist_saxs = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.detectordist_saxs.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.detectordist_saxs.setObjectName("detectordist_saxs")
        self.group_detectordist.addButton(self.detectordist_saxs)
        self.horizontalLayout_3.addWidget(self.detectordist_saxs)
        self.detectordist_gisaxs = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.detectordist_gisaxs.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.detectordist_gisaxs.setObjectName("detectordist_gisaxs")
        self.group_detectordist.addButton(self.detectordist_gisaxs)
        self.horizontalLayout_3.addWidget(self.detectordist_gisaxs)
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 330, 501, 41))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.button_run = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        ###### RUN BUTTON ######
        self.button_run.clicked.connect(self.run)
        self.button_run.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_run.setObjectName("button_run")
        self.horizontalLayout.addWidget(self.button_run)
        self.button_update = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        ###### UPDATE BUTTON ######
        self.button_update.clicked.connect(self.update)
        self.button_update.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_update.setObjectName("button_update")
        self.horizontalLayout.addWidget(self.button_update)
        self.button_exit = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        ###### EXIT BUTTON ######
        self.button_exit.clicked.connect(self.exit)
        self.button_exit.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.button_exit.setAutoDefault(False)
        self.button_exit.setDefault(False)
        self.button_exit.setFlat(False)
        self.button_exit.setObjectName("button_exit")
        self.horizontalLayout.addWidget(self.button_exit)
        self.horizontalLayoutWidgetgisaxsbs = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidgetgisaxsbs.setGeometry(QtCore.QRect(10, 365, 501, 131))
        self.horizontalLayoutWidgetgisaxsbs.setObjectName("horizontalLayoutWidgetgisaxsbs")
        self.gisaxshbox = QtWidgets.QHBoxLayout(self.horizontalLayoutWidgetgisaxsbs)
        self.gisaxshbox.setContentsMargins(0, 0, 0, 0)
        self.gisaxshbox.setObjectName("gisaxshbox")
        self.gisaxs_bs_x_lab = QtWidgets.QLabel(self.horizontalLayoutWidgetgisaxsbs)
        self.gisaxs_bs_x_lab.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.gisaxs_bs_x_lab.setObjectName("gisaxs_bs_x_lab")
        self.gisaxshbox.addWidget(self.gisaxs_bs_x_lab)
        self.set_gisaxs_x = QtWidgets.QLineEdit(self.horizontalLayoutWidgetgisaxsbs)
        self.set_gisaxs_x.setText("")
        self.set_gisaxs_x.setObjectName("set_gisaxs_x")
        self.gisaxshbox.addWidget(self.set_gisaxs_x)
        self.gisaxs_bs_x_rbv = QtWidgets.QLabel(self.horizontalLayoutWidgetgisaxsbs)
        self.gisaxs_bs_x_rbv.setObjectName("gisaxs_bs_x_rbv")
        self.gisaxshbox.addWidget(self.gisaxs_bs_x_rbv)
        self.gisaxs_bs_y_lab = QtWidgets.QLabel(self.horizontalLayoutWidgetgisaxsbs)
        self.gisaxs_bs_y_lab.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.gisaxs_bs_y_lab.setObjectName("gisaxs_bs_y_lab")
        self.gisaxshbox.addWidget(self.gisaxs_bs_y_lab)
        self.set_gisaxs_y = QtWidgets.QLineEdit(self.horizontalLayoutWidgetgisaxsbs)
        self.set_gisaxs_y.setText("")
        self.set_gisaxs_y.setObjectName("set_gisaxs_y")
        self.gisaxshbox.addWidget(self.set_gisaxs_y)
        self.gisaxs_bs_y_rbv = QtWidgets.QLabel(self.horizontalLayoutWidgetgisaxsbs)
        self.gisaxs_bs_y_rbv.setObjectName("gisaxs_bs_y_rbv")
        self.gisaxshbox.addWidget(self.gisaxs_bs_y_rbv)
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(10, 230, 551, 50))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        ###### ENERGY SCAN INPUTS ######
        self.lab_energy_high = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        self.lab_energy_high.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter
        )
        self.lab_energy_high.setObjectName("lab_energy_high")
        self.horizontalLayout.addWidget(self.lab_energy_high)
        self.input_energy_high = QtWidgets.QSpinBox(self.horizontalLayoutWidget_3)
        self.input_energy_high.setMinimum(2100)
        self.input_energy_high.setMaximum(11000)
        self.input_energy_high.setSingleStep(50)
        self.input_energy_high.setProperty("value", 2550)
        self.input_energy_high.setObjectName("input_energy_high")
        self.input_energy_high.valueChanged.connect(self.update_gap)
        self.horizontalLayout.addWidget(self.input_energy_high)
        self.lab_energy_low = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        self.lab_energy_low.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter
        )
        self.lab_energy_low.setObjectName("lab_energy_low")
        self.horizontalLayout.addWidget(self.lab_energy_low)
        self.input_energy_low = QtWidgets.QSpinBox(self.horizontalLayoutWidget_3)
        self.input_energy_low.setMinimum(2100)
        self.input_energy_low.setMaximum(11000)
        self.input_energy_low.setSingleStep(50)
        self.input_energy_low.setProperty("value", 2450)
        self.input_energy_low.setObjectName("input_energy_low")
        self.input_energy_low.valueChanged.connect(self.update_gap)
        self.horizontalLayout.addWidget(self.input_energy_low)
        self.lab_energy_step = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        self.lab_energy_step.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter
        )
        self.lab_energy_step.setObjectName("lab_energy_step")
        self.horizontalLayout.addWidget(self.lab_energy_step)
        self.input_energy_step = QtWidgets.QSpinBox(self.horizontalLayoutWidget_3)
        self.input_energy_step.setMinimum(2)
        self.input_energy_step.setMaximum(100)
        self.input_energy_step.setProperty("value", 10)
        self.input_energy_step.setObjectName("input_energy_step")
        self.input_energy_step.valueChanged.connect(self.update_gap)
        self.horizontalLayout.addWidget(self.input_energy_step)
        self.lab_energy_gap = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        self.lab_energy_gap.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter
        )
        self.lab_energy_gap.setObjectName("lab_energy_gap")
        self.horizontalLayout.addWidget(self.lab_energy_gap)
        self.energy_gap = QtWidgets.QLCDNumber(self.horizontalLayoutWidget_3)
        self.energy_gap.setFrameShadow(QtWidgets.QFrame.Raised)
        self.energy_gap.setLineWidth(3)
        self.energy_gap.setSmallDecimalPoint(False)
        self.energy_gap.setDigitCount(4)
        self.energy_gap.setSegmentStyle(QtWidgets.QLCDNumber.Filled)
        self.energy_gap.setObjectName("energy_gap")
        self.horizontalLayout.addWidget(self.energy_gap)
        self.update_gap()
        self.tickbox_energy_scan = QtWidgets.QCheckBox(self.centralwidget)
        self.tickbox_energy_scan.setGeometry(QtCore.QRect(20, 290, 111, 21))
        self.tickbox_energy_scan.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tickbox_energy_scan.setObjectName("tickbox_energy_scan")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 600, 500, 580))
        self.label_2.setCursor(QtGui.QCursor(QtCore.Qt.CrossCursor))
        self.label_2.setAutoFillBackground(True)
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("../../Pictures/1605284-200.png"))
        self.label_2.setScaledContents(False)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        mainwindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(mainwindow)
        self.statusbar.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.statusbar.setObjectName("statusbar")
        self.qTimer_updater = QtCore.QTimer()
        self.qTimer_updater.setInterval(1000)
        self.qTimer_updater.timeout.connect(self.updateValues)
        self.qTimer_updater.start()
        mainwindow.setStatusBar(self.statusbar)

        self.retranslateUi(mainwindow)
        QtCore.QMetaObject.connectSlotsByName(mainwindow)
        mainwindow.setTabOrder(self.input_visit, self.input_filename)
        mainwindow.setTabOrder(self.input_filename, self.exposure)
        mainwindow.setTabOrder(self.exposure, self.detectordist_in)
        mainwindow.setTabOrder(self.detectordist_in, self.detectordist_out)
        mainwindow.setTabOrder(self.detectordist_out, self.detectordist_saxs)
        mainwindow.setTabOrder(self.detectordist_saxs, self.detectordist_gisaxs)

    def retranslateUi(self, mainwindow):
        _translate = QtCore.QCoreApplication.translate
        mainwindow.setWindowTitle(_translate("mainwindow", "I23 Oneshot"))
        self.lab_visit.setText(_translate("mainwindow", "Visit:"))
        self.input_visit.setPlaceholderText(_translate("mainwindow", "cm12345"))
        self.lab_filename.setText(_translate("mainwindow", "File name:"))
        self.lab_exposure.setText(_translate("mainwindow", "Exposure (s)"))
        self.input_filename.setPlaceholderText(_translate("mainwindow", "oneshot"))
        self.detectordist_in.setText(_translate("mainwindow", "In"))
        self.detectordist_out.setText(_translate("mainwindow", "Out"))
        self.detectordist_saxs.setText(_translate("mainwindow", "SAXS"))
        self.detectordist_gisaxs.setText(_translate("mainwindow", "GISAXS"))
        self.lab_energy_high.setText(_translate("mainwindow", "Energy High: "))
        self.lab_energy_low.setText(_translate("mainwindow", "Energy Low: "))
        self.lab_energy_step.setText(_translate("mainwindow", "Steps: "))
        self.lab_energy_gap.setText(_translate("mainwindow", "Gap: "))
        self.tickbox_energy_scan.setText(_translate("mainwindow", "Energy Scan"))
        self.button_run.setText(_translate("mainwindow", "Run"))
        self.button_update.setText(_translate("mainwindow", "Update"))
        self.button_exit.setText(_translate("mainwindow", "Exit"))
        self.gisaxs_bs_x_lab.setText(_translate("mainwindow", "GISAXS BS X"))
        self.gisaxs_bs_x_rbv.setText(_translate("mainwindow", "x is"))
        self.gisaxs_bs_y_lab.setText(_translate("mainwindow", "GISAXS BS Y"))
        self.gisaxs_bs_y_rbv.setText(_translate("mainwindow", "y is"))
        self.blx_rbv = str(ca.caget(pv.senv_blx_rbv))
        self.bly_rbv = str(ca.caget(pv.senv_bly_rbv))
        self.gisaxs_bs_x_rbv.setText(self.blx_rbv)
        self.gisaxs_bs_y_rbv.setText(self.bly_rbv)

    def uniquify(self, path):
        filename, extension = os.path.splitext(path)
        counter = 1
        while os.path.exists(path):
            path = filename + " (" + str(counter) + ")" + extension
            counter += 1
            
        filename, _ = os.path.splitext(path)
        return filename
    
    def run(self):
        if self.detectordist_out.isChecked():
            detectordist = "out"
        elif self.detectordist_in.isChecked():
            detectordist = "in"
        elif self.detectordist_saxs.isChecked():
            detectordist = "saxs"
        elif self.detectordist_gisaxs.isChecked():
            detectordist = "saxs"
        print(detectordist)
        exp = self.exposure.value()
        # newpath = self.uniquify(os.path.join("/dls/i23/data", str((datetime.date.today().year)), str(self.input_visit.text()), "oneshot", (str(self.input_filename.text() + ".cbf")))
        # tail = os.path.split(newpath)
        # self.input_filename.setText(tail)
        self.runoneshot = oneshot(
            detectordist,
            self.input_visit.text(),
            self.input_filename.text(),
            str(exp),
        )
        self.runoneshot.prepare_beamline()
        if self.tickbox_energy_scan.isChecked():
            self.d5values = []
            self.energy_scan()
        else:
            print("not scan")
            self.runoneshot.collect()
            self.runoneshot.returntonormal()

    def energy_scan(self):
        self.energy_low = self.input_energy_low.value()
        self.energy_high = self.input_energy_high.value()
        self.energy_step = self.input_energy_step.value()
        for energy_set in np.around(np.linspace(self.energy_low, self.energy_high, (self.energy_step + 1))):
            print("Running at energy ", str(energy_set), "eV")
            self.runoneshot.energy_change(energy_set)
            self.runoneshot.collect()

    def update_gap(self):
        gap = float(
            (self.input_energy_high.value() - self.input_energy_low.value())
            / self.input_energy_step.value()
        )
        self.energy_gap.display(gap)

    def update(self):
        self.blx = str(self.set_gisaxs_x.text())
        self.bly = str(self.set_gisaxs_y.text())
        ca.caput(pv.senv_blx, self.blx)
        ca.caput(pv.senv_bly, self.bly)
        time.sleep(5)
        
    def updateValues(self):
        self.blx_rbv = str(ca.caget(pv.senv_blx_rbv))
        self.gisaxs_bs_x_rbv.setText(self.blx_rbv)
        self.bly_rbv = str(ca.caget(pv.senv_bly_rbv))
        self.gisaxs_bs_y_rbv.setText(self.bly_rbv)

    def exit(self):
        try:
            self.runoneshot
        except AttributeError:
            runoneshot_exists = False
        else:
            runoneshot_exists = True
        if runoneshot_exists == True:
            self.runoneshot.returntonormal()
        else:
            self.close()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    mainwindow = QtWidgets.QMainWindow()
    ui = Ui_mainwindow()
    ui.setupUi(mainwindow)
    mainwindow.show()
    sys.exit(app.exec_())
